name: Install Python 3.12.0 on Windows

on:
  push:
    branches:
      - master

jobs:
  install_and_upload_python:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Git
      run: |
        git config user.name "GitHub Action"
        git config user.email "action@github.com"

    - name: Download Python 3.12.0
      run: |
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Invoke-WebRequest -Uri 'https://www.python.org/ftp/python/3.12.0/python-3.12.0-amd64.exe' -OutFile python-3.12.0-amd64.exe

    - name: Install Python
      run: |
        Start-Process -FilePath python-3.12.0-amd64.exe -ArgumentList '/quiet', 'InstallAllUsers=1', 'PrependPath=1' -Wait

    - name: Get Python Version
      id: python_version
      run: |
        $pythonVersion = python --version
        echo "::set-output name=version::${pythonVersion}"

    - name: Package Python binaries
      run: |
        Compress-Archive -Path "C:\Program Files\Python312" -DestinationPath "python-3.12.0-amd64.zip"

    - name: Get current date and time
      id: datetime
      run: echo "::set-output name=date::$(Get-Date -Format 'yyyyMMdd-HHmmss')"

    - name: Create Python Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.datetime.outputs.date }}
        release_name: Python 3.12.0 Release ${{ steps.datetime.outputs.date }}
        draft: false
        prerelease: false

    - name: Upload Python ZIP to Release
      id: upload_python
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: python-3.12.0-amd64.zip
        asset_name: python-3.12.0-amd64.zip
        asset_content_type: application/zip
