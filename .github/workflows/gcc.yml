name: Build Windows GCC Binaries

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up MSYS2
      run: |
        choco install msys2 -y
        & $env:ChocolateyInstall\bin\refreshenv.exe
        
    - name: Install required packages
      run: |
        msys2_path="C:\\tools\\msys64"
        cmd.exe /C "$msys2_path\\mingw64.exe pacman -Syu --noconfirm"
        cmd.exe /C "$msys2_path\\mingw64.exe pacman -S --noconfirm base-devel mingw-w64-x86_64-toolchain"
        
    - name: Get latest GCC version
      run: |
        latest_gcc_version=$(curl -s https://api.github.com/repos/gcc-mirror/gcc/releases/latest | jq -r '.tag_name' | sed 's/gcc-//')
        echo "Latest GCC version: $latest_gcc_version"
        
    - name: Build GCC for Windows
      run: |
        gcc_dir="gcc-$latest_gcc_version"
        install_dir="/mingw64"
        
        mkdir "$HOME/src"
        cd "$HOME/src"
        curl -L "https://ftp.gnu.org/gnu/gcc/gcc-$latest_gcc_version/gcc-$latest_gcc_version.tar.xz" -o "$gcc_dir.tar.xz"
        tar -xJf "$gcc_dir.tar.xz"
        
        cd "$gcc_dir"
        ./contrib/download_prerequisites
        mkdir build
        cd build
        ../configure --target=x86_64-w64-mingw32 --disable-bootstrap --enable-languages=c,c++
        make -j$(nproc)
        make install DESTDIR="$install_dir"
        
    - name: Archive and upload GCC binaries
      run: |
        cd "$install_dir"
        tar czf gcc_binaries.tar.gz *
        
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git checkout --orphan binaries
        git rm -rf .
        mv gcc_binaries.tar.gz ..
        git add ..
        git commit -m "Add compiled GCC binaries for Windows"
        git push --force origin binaries
